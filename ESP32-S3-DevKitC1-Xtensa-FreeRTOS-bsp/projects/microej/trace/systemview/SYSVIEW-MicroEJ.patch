diff --git a/components/app_trace/CMakeLists.txt b/components/app_trace/CMakeLists.txt
index 9cb36c8f04..b513df3abb 100644
--- a/components/app_trace/CMakeLists.txt
+++ b/components/app_trace/CMakeLists.txt
@@ -50,7 +50,7 @@ idf_component_register(SRCS "${srcs}"
                        INCLUDE_DIRS "${include_dirs}"
                        PRIV_INCLUDE_DIRS "${priv_include_dirs}"
                        # Requires "driver" for GPTimer in "SEGGER_SYSVIEW_Config_FreeRTOS.c"
-                       PRIV_REQUIRES soc driver
+                       PRIV_REQUIRES soc driver main
                        REQUIRES esp_timer
                        LDFRAGMENTS linker.lf)
 
diff --git a/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.c b/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.c
index a6659929eb..6fe275d408 100644
--- a/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.c
+++ b/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.c
@@ -9,6 +9,8 @@
 **********************************************************************
 *                                                                    *
 *       (c) 2015 - 2017  SEGGER Microcontroller GmbH & Co. KG        *
+*       Copyright 2022 MicroEJ Corp.                                 *
+*       This file has been modified by MicroEJ Corp.                 *
 *                                                                    *
 *       www.segger.com     Support: support@segger.com               *
 *                                                                    *
@@ -243,6 +245,9 @@ typedef struct {
         U32                     DisabledEvents;
   const SEGGER_SYSVIEW_OS_API*  pOSAPI;
         SEGGER_SYSVIEW_SEND_SYS_DESC_FUNC*   pfSendSysDesc;
+        U32                     DisabledEventGroups;
+        U32                     MicroJVMTaskId; // MicroJVM TaskId, or 0 if none.
+        U32                     CurrentMicroEJTaskId; // Current MicroEJ TaskId, or 0 if none.
 } SEGGER_SYSVIEW_GLOBALS;
 
 /*********************************************************************
@@ -253,6 +258,7 @@ typedef struct {
 */
 static void _SendPacket(U8* pStartPacket, U8* pEndPacket, unsigned int EventId);
 
+static U32 _SEGGER_SYSVIEW_convertMicroEJTask(U32 TaskId);
 /*********************************************************************
 *
 *       Static data
@@ -295,6 +301,13 @@ static SEGGER_SYSVIEW_GLOBALS _SYSVIEW_Globals;
 static SEGGER_SYSVIEW_MODULE* _pFirstModule;
 static U8                     _NumModules;
 
+/*
+ * Set to 1 when an active connection has been detected by SEGGER_SYSVIEW_WaitForConnection()
+ *
+ * Added by MicroEJ Corp.
+ */
+static U8 _connectionDetected = 0;
+
 /*********************************************************************
 *
 *       Static code
@@ -669,6 +682,8 @@ Send:
     if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
       goto SendDone;
     }
+    } else if (_SYSVIEW_Globals.DisabledEventGroups & ((U32)1u << ((EventId/32)-1))) {
+       goto SendDone;
   }
   //
   // Prepare actual packet.
@@ -2047,6 +2062,7 @@ void SEGGER_SYSVIEW_OnTaskTerminate(U32 TaskId) {
 *    TaskId - Task ID of task that started to execute.
 */
 void SEGGER_SYSVIEW_OnTaskStartExec(U32 TaskId) {
+  TaskId = _SEGGER_SYSVIEW_convertMicroEJTask(TaskId);
   U8* pPayload;
   U8* pPayloadStart;
   RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + SEGGER_SYSVIEW_QUANTA_U32);
@@ -2085,6 +2101,7 @@ void SEGGER_SYSVIEW_OnTaskStopExec(void) {
 *    TaskId - Task ID of task that started to execute.
 */
 void SEGGER_SYSVIEW_OnTaskStartReady(U32 TaskId) {
+  TaskId = _SEGGER_SYSVIEW_convertMicroEJTask(TaskId);
   U8* pPayload;
   U8* pPayloadStart;
   RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + SEGGER_SYSVIEW_QUANTA_U32);
@@ -2108,6 +2125,7 @@ void SEGGER_SYSVIEW_OnTaskStartReady(U32 TaskId) {
 *    Cause  - Reason for task to stop (i.e. Idle/Sleep)
 */
 void SEGGER_SYSVIEW_OnTaskStopReady(U32 TaskId, unsigned int Cause) {
+  TaskId = _SEGGER_SYSVIEW_convertMicroEJTask(TaskId);
   U8* pPayload;
   U8* pPayloadStart;
   RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2 * SEGGER_SYSVIEW_QUANTA_U32);
@@ -2383,7 +2401,7 @@ void SEGGER_SYSVIEW_RegisterModule(SEGGER_SYSVIEW_MODULE* pModule) {
     _pFirstModule = pModule;
     _NumModules++;
   }
-  SEGGER_SYSVIEW_SendModule(_NumModules-1);
+  SEGGER_SYSVIEW_SendModule(0);
   if (pModule->pfSendModuleDesc) {
     pModule->pfSendModuleDesc();
   }
@@ -2693,7 +2711,7 @@ void SEGGER_SYSVIEW_ErrorfTarget(const char* s, ...) {
 void SEGGER_SYSVIEW_Print(const char* s) {
   U8* pPayload;
   U8* pPayloadStart;
-  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2 * SEGGER_SYSVIEW_QUANTA_U32 + SEGGER_SYSVIEW_MAX_STRING_LEN + 3/*1 or 3 bytes for string length*/);
+  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2 * SEGGER_SYSVIEW_QUANTA_U32 + SEGGER_SYSVIEW_MAX_STRING_LEN);
   //
   pPayload = _EncodeStr(pPayloadStart, s, SEGGER_SYSVIEW_MAX_STRING_LEN);
   ENCODE_U32(pPayload, SEGGER_SYSVIEW_LOG);
@@ -2760,6 +2778,20 @@ void SEGGER_SYSVIEW_EnableEvents(U32 EnableMask) {
   _SYSVIEW_Globals.DisabledEvents &= ~EnableMask;
 }
 
+/*********************************************************************
+*
+*       SEGGER_SYSVIEW_EnableEventGroups()
+*
+*  Function description
+*    Enable a group of SystemView events to be generated.
+*
+*  Parameters
+*    EnableGroupMask   - Group of Events to be enabled.
+*/
+void SEGGER_SYSVIEW_EnableEventGroups(U32 EnableGroupMask) {
+  _SYSVIEW_Globals.DisabledEventGroups &= ~EnableGroupMask;
+}
+
 /*********************************************************************
 *
 *       SEGGER_SYSVIEW_DisableEvents()
@@ -2774,5 +2806,85 @@ void SEGGER_SYSVIEW_DisableEvents(U32 DisableMask) {
   _SYSVIEW_Globals.DisabledEvents |= DisableMask;
 }
 
+/*********************************************************************
+*
+*       SEGGER_SYSVIEW_DisableEventGroups()
+*
+*  Function description
+*    Enable a group of SystemView events to not be generated.
+*
+*  Parameters
+*    EnableGroupMask   - Group of Events to be disabled.
+*/
+void SEGGER_SYSVIEW_DisableEventGroups(U32 EnableGroupMask) {
+  _SYSVIEW_Globals.DisabledEventGroups |= EnableGroupMask;
+}
+
+/*********************************************************************
+*
+*       SEGGER_SYSVIEW_WaitForConnection()
+*
+*  Function description
+*    Test whether SystemView application is connected or not
+*
+*  Return value
+*    Return 1 if connected, 0 otherwise
+*
+*  Added by MicroEJ Corp.
+*/
+int SEGGER_SYSVIEW_isConnected(){
+  if (_connectionDetected == 0) {
+    _HandleIncomingPacket();
+    if (_SYSVIEW_Globals.EnableState != 0) {
+      _connectionDetected = 1;
+    }
+  }
+
+  return _connectionDetected;
+}
+
+/*********************************************************************
+*
+*       SEGGER_SYSVIEW_setMicroJVMTask()
+*
+*  Function description
+*    Indicate to SystemView the MicroJVM task id.
+*
+*  Parameters
+*    TaskID  - The MicroJVM task id.
+*
+*  Added by MicroEJ Corp.
+*/
+void SEGGER_SYSVIEW_setMicroJVMTask(U32 TaskId){
+  _SYSVIEW_Globals.MicroJVMTaskId = TaskId;
+}
+
+/*********************************************************************
+*
+*       SEGGER_SYSVIEW_setCurrentMicroEJTask()
+*
+*  Function description
+*    Indicate to SystemView the currently scheduled MicroEJ task id.
+*
+*  Parameters
+*    TaskID  - The currently scheduled MicroEJ task id.
+*
+*  Added by MicroEJ Corp.
+*/
+void SEGGER_SYSVIEW_setCurrentMicroEJTask(U32 TaskId){
+  _SYSVIEW_Globals.CurrentMicroEJTaskId = TaskId;
+}
+
+static U32 _SEGGER_SYSVIEW_convertMicroEJTask(U32 TaskId){
+  U32 CurrentMicroEJTaskId = _SYSVIEW_Globals.CurrentMicroEJTaskId;
+  if(TaskId == _SYSVIEW_Globals.MicroJVMTaskId && CurrentMicroEJTaskId != 0){
+    // Any event sent on the MicroJVM OS task is redirected to the latest Java Task
+    // The MicroJVM task does not appear in Segger SystemView
+    return CurrentMicroEJTaskId;
+  }
+  else{
+    return TaskId;
+  }
+}
 
 /*************************** End of file ****************************/
diff --git a/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.h b/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.h
index eb4cfc583f..59e2ee05d7 100644
--- a/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.h
+++ b/components/app_trace/sys_view/SEGGER/SEGGER_SYSVIEW.h
@@ -9,6 +9,8 @@
 **********************************************************************
 *                                                                    *
 *       (c) 2015 - 2017  SEGGER Microcontroller GmbH & Co. KG        *
+*       Copyright 2022 MicroEJ Corp.                                 *
+*       This file has been modified by MicroEJ Corp.                 *
 *                                                                    *
 *       www.segger.com     Support: support@segger.com               *
 *                                                                    *
@@ -197,6 +199,7 @@ typedef struct {
   U32          Prio;
   U32          StackBase;
   U32          StackSize;
+  U32		   IsMicroEJThread;
 } SEGGER_SYSVIEW_TASKINFO;
 
 typedef struct SEGGER_SYSVIEW_MODULE_STRUCT SEGGER_SYSVIEW_MODULE;
@@ -237,6 +240,9 @@ void SEGGER_SYSVIEW_SendTaskInfo                  (const SEGGER_SYSVIEW_TASKINFO
 void SEGGER_SYSVIEW_SendSysDesc                   (const char* sSysDesc);
 // Checks whether tracing has been started
 U8 SEGGER_SYSVIEW_Started(void);
+int SEGGER_SYSVIEW_isConnected                    (void); // Added by MicroEJ Corp.
+void SEGGER_SYSVIEW_setMicroJVMTask               (U32); // Added by MicroEJ Corp.
+void SEGGER_SYSVIEW_setCurrentMicroEJTask         (U32); // Added by MicroEJ Corp.
 
 /*********************************************************************
 *
@@ -324,6 +330,9 @@ void SEGGER_SYSVIEW_Error                         (const char* s);
 void SEGGER_SYSVIEW_EnableEvents                  (U32 EnableMask);
 void SEGGER_SYSVIEW_DisableEvents                 (U32 DisableMask);
 
+void SEGGER_SYSVIEW_EnableEventGroups(U32 EnableGroupMask);
+void SEGGER_SYSVIEW_DisableEventGroups(U32 EnableGroupMask);
+
 /*********************************************************************
 *
 *       Application-provided functions
diff --git a/components/app_trace/sys_view/Sample/Config/SEGGER_SYSVIEW_Config_FreeRTOS.c b/components/app_trace/sys_view/Sample/Config/SEGGER_SYSVIEW_Config_FreeRTOS.c
index 9e70542d99..ed31bb4b75 100644
--- a/components/app_trace/sys_view/Sample/Config/SEGGER_SYSVIEW_Config_FreeRTOS.c
+++ b/components/app_trace/sys_view/Sample/Config/SEGGER_SYSVIEW_Config_FreeRTOS.c
@@ -11,6 +11,8 @@
 **********************************************************************
 *                                                                    *
 *       (c) 2015 - 2017  SEGGER Microcontroller GmbH & Co. KG        *
+*       Copyright 2022 MicroEJ Corp.                                 *
+*       This file has been modified by MicroEJ Corp.                 *
 *                                                                    *
 *       www.segger.com     Support: support@segger.com               *
 *                                                                    *
@@ -78,6 +80,11 @@ Revision: $Rev: 3734 $
 #include "soc/interrupts.h"
 #include "esp_private/esp_clk.h"
 
+#ifndef VALIDATION_BUILD
+#include "LLMJVM_MONITOR_sysview.h"
+#include "LLTRACE_sysview_configuration.h"
+#endif
+
 extern const SEGGER_SYSVIEW_OS_API SYSVIEW_X_OS_TraceAPI;
 
 /*********************************************************************
@@ -203,12 +210,24 @@ static void SEGGER_SYSVIEW_TS_Init(void)
 #endif // TS_USE_TIMERGROUP
 }
 
+SEGGER_SYSVIEW_OS_API SYSVIEW_MICROEJ_X_OS_TraceAPI;
+
+static void SYSVIEW_MICROEJ_X_OS_SendTaskList(void){
+  SYSVIEW_X_OS_TraceAPI.pfSendTaskList();
+#ifndef VALIDATION_BUILD
+  LLMJVM_MONITOR_SYSTEMVIEW_send_task_list();
+#endif
+}
+
 void SEGGER_SYSVIEW_Conf(void) {
     U32 disable_evts = 0;
 
+    SYSVIEW_MICROEJ_X_OS_TraceAPI.pfGetTime = SYSVIEW_X_OS_TraceAPI.pfGetTime;
+    SYSVIEW_MICROEJ_X_OS_TraceAPI.pfSendTaskList = SYSVIEW_MICROEJ_X_OS_SendTaskList;
+
     SEGGER_SYSVIEW_TS_Init();
     SEGGER_SYSVIEW_Init(SYSVIEW_TIMESTAMP_FREQ, SYSVIEW_CPU_FREQ,
-                        &SYSVIEW_X_OS_TraceAPI, _cbSendSystemDesc);
+                        &SYSVIEW_MICROEJ_X_OS_TraceAPI, _cbSendSystemDesc);
     SEGGER_SYSVIEW_SetRAMBase(SYSVIEW_RAM_BASE);
 
 #if !CONFIG_APPTRACE_SV_EVT_OVERFLOW_ENABLE
diff --git a/components/app_trace/sys_view/Sample/OS/SEGGER_SYSVIEW_FreeRTOS.h b/components/app_trace/sys_view/Sample/OS/SEGGER_SYSVIEW_FreeRTOS.h
index 82e6859a59..ad77caa32a 100644
--- a/components/app_trace/sys_view/Sample/OS/SEGGER_SYSVIEW_FreeRTOS.h
+++ b/components/app_trace/sys_view/Sample/OS/SEGGER_SYSVIEW_FreeRTOS.h
@@ -9,6 +9,8 @@
 **********************************************************************
 *                                                                    *
 *       (c) 2015 - 2017  SEGGER Microcontroller GmbH & Co. KG        *
+*       Copyright 2022 MicroEJ Corp.                                 *
+*       This file has been modified by MicroEJ Corp.                 *
 *                                                                    *
 *       www.segger.com     Support: support@segger.com               *
 *                                                                    *
@@ -211,6 +213,20 @@ Notes:
 #define apiID_VEVENTGROUPDELETE                   (72u)
 #define apiID_UXEVENTGROUPGETNUMBER               (73u)
 
+#define SYSVIEW_GROUPMASK_SLOW_APPID_1            (1 << 2)	// Mask events 128 to 159	(slow appIDs from 1 to 32)
+#define SYSVIEW_GROUPMASK_SLOW_APPID_2            (1 << 3)	// Mask events 160 to 191	(slow appIDs from 33 to 64)
+#define SYSVIEW_GROUPMASK_SLOW_APPID_3            (1 << 4)	// Mask events 192 to 223	(slow appIDs from 65 to 96)
+
+#define SYSVIEW_GROUPMASK_ALL_SLOW_APPID	( 0 \
+	| SYSVIEW_GROUPMASK_SLOW_APPID_1 \
+	| SYSVIEW_GROUPMASK_SLOW_APPID_2 \
+	| SYSVIEW_GROUPMASK_SLOW_APPID_3 \
+	)
+#define SYSVIEW_GROUPMASK_ALL_APPID	( 0 \
+	| SYSVIEW_GROUPMASK_ALL_SLOW_APPID \
+	| SYSVIEW_GROUPMASK_FAST_APPID \
+	)
+
 #ifdef CONFIG_FREERTOS_SMP
 
 #define traceQUEUE_SEND( pxQueue )                  SYSVIEW_RecordU32x4(apiFastID_OFFSET + apiID_XQUEUEGENERICSEND, SEGGER_SYSVIEW_ShrinkId((U32)pxQueue), 0, 0, 0)
