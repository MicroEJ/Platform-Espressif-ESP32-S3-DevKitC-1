<!--
	XML

	Copyright 2018-2020 MicroEJ Corp. All rights reserved.
	MicroEJ Corp. PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<!--
	This script is called from the test-suite framework. It compiles and launches a Java MicroEJ Test.
-->
<project name="harness" default="run" xmlns:traceAnalyzer="antlib:com.is2t.testsuite.traceAnalyzer" xmlns:ac="antlib:net.sf.antcontrib">
	<property file="${testsuite.test.properties}"/>
	<property file="${testsuite.common.properties}"/>

	<!-- Import the script that defines the trace analyzer tasks  -->
	<fail unless="platform.dir" message="Please set the 'platform.dir' property."/>
	<import file="${platform.dir}/scripts/traceAnalyzerDefinition.xml"/>

	<target name="harness#init">
		<!-- JPF deploy tool name -->
		<fail unless="microejtool.deploy.name" message="Please set the 'microejtool.deploy.name' property."/>

		<!-- Create and clean microej.io.tmpdir -->
		<tempfile property="microej.io.tmpdir" deleteonexit="true"/>
		<delete failonerror="false"	dir="${microej.io.tmpdir}"/>
		<mkdir dir="${microej.io.tmpdir}"/>
	</target>

	<target name="harness#build" depends="harness#init">
		<!-- get class name for central and peripheral -->
		<property name="testsuite.central.class" value="${testsuite.test.class}"/>
		<ac:propertyregex property="testsuite.peripheral.class" input="${testsuite.central.class}" regexp="(.*)\.central\.(.*)" replace="\1.peripheral.\2"/>

		<!-- echo class names -->
		<echo message="Central class: ${testsuite.central.class}"/>
		<echo message="Peripheral class: ${testsuite.peripheral.class}"/>

		<!-- run MicroEJ full link -->
		<ant antfile="${platform.dir}/scripts/fullLink.microejLaunch">
			<property name="application.classpath" value="${testsuite.test.classpath}${path.separator}${application.classpath}"/>
			<property name="application.main.class" value="${testsuite.central.class}"/>
			<property name="output.dir" value="${testsuite.report.dir}/bin"/>
			<property name="basedir" value="${platform.dir}/scripts"/>
		</ant>
		<ant antfile="${platform.dir}/scripts/fullLink.microejLaunch">
			<property name="application.classpath" value="${testsuite.test.classpath}${path.separator}${application.classpath}"/>
			<property name="application.main.class" value="${testsuite.peripheral.class}"/>
			<property name="output.dir" value="${testsuite.report.dir}/bin"/>
			<property name="basedir" value="${platform.dir}/scripts"/>
		</ant>

		<!-- guess output dir of MicroEJ full link -->
		<property name="testsuite.central.output.dir" location="${testsuite.report.dir}/bin/${testsuite.central.class}"/>
		<property name="testsuite.peripheral.output.dir" location="${testsuite.report.dir}/bin/${testsuite.peripheral.class}"/>

		<!-- guess output binary path of MicroEJ full link -->
		<property name="testsuite.central.binary.file" location="${testsuite.central.output.dir}/application.out"/>
		<property name="testsuite.peripheral.binary.file" location="${testsuite.peripheral.output.dir}/application.out"/>

		<!-- check that output binaries have been created -->
		<fail message="Binary file generation failed.">
			<condition>
				<or>
					<not><available file="${testsuite.central.binary.file}"/></not>
					<not><available file="${testsuite.peripheral.binary.file}"/></not>
				</or>
			</condition>
		</fail>
	</target>

	<target name="harness#launch" depends="harness#build,traceAnalyzer/definition">
		<property name="testsuite.trace.timeout" value="30" description="Default value of socket trace analyzer timeout"/>
		<fail unless="testsuite.trace.ip" message="Please set the 'testsuite.trace.ip' property."/>
		<fail unless="testsuite.trace.port" message="Please set the 'testsuite.trace.port' property."/>

		<ant antfile="${platform.dir}/scripts/${microejtool.deploy.name}.microejTool" dir="${platform.dir}/scripts">
			<property name="application.file" location="${testsuite.peripheral.binary.file}"/>
			<property name="esp.flash.port" value="${testsuite.peripheral.com.port}"/>
			<property name="skip.reset" value="set"/>
		</ant>

		<ant antfile="${platform.dir}/scripts/${microejtool.deploy.name}.microejTool" dir="${platform.dir}/scripts">
			<property name="application.file" location="${testsuite.central.binary.file}"/>
			<property name="esp.flash.port" value="${testsuite.central.com.port}"/>
			<property name="skip.reset" value="set"/>
		</ant>

		<parallel failonany="true">
			<traceAnalyzer:socketTraceAnalyzer
				host="${testsuite.trace.ip}"
				port="${testsuite.trace.port}"
				noActivityTimeout="${testsuite.trace.timeout}"
				verboseLevel="10"
			/>

			<sequential>
				<ant antfile="${platform.dir}/scripts/${microejtool.deploy.name}.microejTool" dir="${platform.dir}/scripts">
					<property name="esp.flash.port" value="${testsuite.peripheral.com.port}"/>
					<property name="skip.flash" value="set"/>
				</ant>

				<ant antfile="${platform.dir}/scripts/${microejtool.deploy.name}.microejTool" dir="${platform.dir}/scripts">
					<property name="esp.flash.port" value="${testsuite.central.com.port}"/>
					<property name="skip.flash" value="set"/>
				</ant>
				</sequential>
		</parallel>

		<!-- If the script reaches this point, test result is success -->
	</target>

	<target name="harness#clean" depends="harness#build" if="clean.binaries">
		<delete dir="${testsuite.central.output.dir}"/>
		<delete dir="${testsuite.peripheral.output.dir}"/>
	</target>

	<target name="run" depends="harness#launch, harness#clean"/>
</project>
